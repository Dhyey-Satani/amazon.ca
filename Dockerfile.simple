# Simple Dockerfile without Chrome - More reliable for cloud deployment
FROM python:3.11-slim

# Set environment variables for production
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    HOME=/app \
    USE_SELENIUM=false

# Install minimal system dependencies
RUN apt-get update && apt-get install -y \
    # Basic utilities
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory first
WORKDIR /app

# Create non-root user with proper permissions
RUN groupadd -r botuser && useradd -r -g botuser -s /bin/bash botuser && \
    # Create necessary directories with proper permissions
    mkdir -p /app/logs /app/data /app/.cache /app/.local && \
    chown -R botuser:botuser /app

# Copy requirements first for better layer caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Switch to non-root user before copying app files
USER botuser

# Copy application code with proper ownership
COPY --chown=botuser:botuser bot.py .
COPY --chown=botuser:botuser api_bot.py .
COPY --chown=botuser:botuser test_bot.py .
COPY --chown=botuser:botuser .env.example .

# Health check
HEALTHCHECK --interval=5m --timeout=30s --start-period=30s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/status', timeout=10)"

# Default environment variables for production (no Chrome)
ENV USE_SELENIUM=false \
    POLL_INTERVAL=30 \
    LOG_LEVEL=INFO \
    DATABASE_PATH=/app/data/jobs.db \
    API_PORT=8000 \
    AUTO_START_MONITORING=true

# Expose port for API
EXPOSE 8000

# Simple startup command
CMD ["python", "api_bot.py"]